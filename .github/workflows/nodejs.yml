name: Node CI
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node-version: [14.x, 16.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://npm.pkg.github.com'
        scope: '@bervproject'
        always-auth: true
    - name: Install Package
      run: yarn --frozen-lockfile
      env:
        CI: true
    - name: Lint Source Code
      run: yarn lint
    - name: Unit Test
      run: yarn test
    - name: Build Package
      run: yarn build
    - name: Build Docs
      run: yarn docs
    - uses: codecov/codecov-action@v2.1.0
      if: ${{ matrix.node-version == '14.x'}}
    - name: Release
      if: ${{ github.event_name == 'push' && matrix.node-version == '14.x' }}
      run: npx semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Docs Deploy
      if: ${{ github.event_name == 'push' && matrix.node-version == '14.x' }}
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
    - name: Use Node.js ${{ matrix.node-version }}
      if: ${{ github.event_name == 'push' && matrix.node-version == '14.x' }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://registry.npmjs.org'
        scope: '@bervproject'
        always-auth: true
    - name: Publish to NPM
      if: ${{ github.event_name == 'push' && contains(github.event.head_commit.message, '[package]') && matrix.node-version == '14.x' }}
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
